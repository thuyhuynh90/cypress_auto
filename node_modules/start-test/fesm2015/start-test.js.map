{"version":3,"file":"start-test.js","sources":["../../../projects/start-test/src/lib/start-test.service.ts","../../../projects/start-test/src/lib/start-test.component.ts","../../../projects/start-test/src/lib/start-test.module.ts","../../../projects/start-test/src/public-api.ts","../../../projects/start-test/src/start-test.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StartTestService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'start-test',\n  templateUrl: './start-test.component.html',\n  styleUrls: ['./start-test.component.css']\n})\nexport class StartTestComponent implements OnInit {\n\n  @Input('testSheet') testSheet: any;\n  @Input('ansFilling') ansFilling: boolean = false;\n  @Input('timeUp') timeUp: Subject<boolean>;\n  @Output('outputFunction') outputFunction: EventEmitter<any> = new EventEmitter();\n\n  finalDataList: any;\n\n  sectionsForm: FormGroup[] = [];\n  inputForm: FormGroup;\n  \n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.timeUp.subscribe(resp =>{\n      if(resp){\n        this.submt();\n      }\n    });\n    this.createTest();\n  }\n\n  initForm(qid: any, code: any = ''){\n    return this.fb.group({\n\t\t\tq: [qid],\n      ans: [],\n      review: [false],\n      cAns: [null]\n    });\n  }\n  createTest(){\n    let i = 1, j = 0;\n    let formsData = [];\n    this.finalDataList = []; \n    this.inputForm = this.fb.group({\n\t\t\tid: [this.testSheet.id],\n    });\n    this.testSheet.sections.forEach(sec => {\n      let finalData: any = new Object();\n      this.finalDataList.push(finalData);\n      finalData.sec = sec.sec;\n      finalData.formsData = [];\n      sec.types.forEach(typs => {\n        let opts: any = [];\n        let secTypes: any = new Object();\n        finalData.formsData.push(secTypes);\n        secTypes.formsData = [];\n        if(typs.qType.code != \"INPUT\"){\n          if(typs.optType == \"number\"){\n            for(let tmp_i = 1; tmp_i <= typs.optCount; tmp_i++){\n              opts.push(tmp_i);\n            }\n          } else {\n            for(let tmp_i = 1; tmp_i <= typs.optCount; tmp_i++){\n              opts.push(String.fromCharCode(tmp_i+64));\n            }\n          }\n        } else {\n          opts = 'input';\n        }\n        secTypes.info = `${typs.qType.name}.`;\n        if((typs.to - typs.from + 1) != typs.consider){\n          secTypes.info = `${secTypes.info} Only first ${typs.consider} answers will be evaluated.`;\n        } else {\n          secTypes.info = `${secTypes.info} All Questions Are Mandatory.`;\n        }\n        for(let tmp_i = typs.from; tmp_i <= typs.to; tmp_i++){\n          let fid: any = this.initForm(`${sec.secId}-${i}`, typs.qType.code);\n          formsData.push(fid);\n          secTypes.formsData.push({\n            'id': fid,\n            'q': i++,\n            'opt': opts,\n            'qType': typs.qType.code,\n            'cutMarks': typs.cutMarks,\n            'marks': typs.marks\n          });\n        }\n      });\n    });\n    this.sectionsForm = formsData;\n    this.inputForm.addControl(\"sections\", this.fb.array(this.sectionsForm));\n    console.log(this.finalDataList);\n  }\n\n  submt(){\n    //let t = Object.assign({}, (this.fb.array(this.sectionsForm)).value);\n    let t = Object.assign({}, this.inputForm.value);\n    console.log(t);\n    this.outputFunction.emit(t);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { StartTestComponent } from './start-test.component';\nimport { CommonModule } from '@angular/common';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { TabViewModule } from 'primeng/tabview';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CheckboxModule } from 'primeng/checkbox';\n\n@NgModule({\n  declarations: [\n    StartTestComponent\n  ],\n  imports: [\n    CommonModule,\n    RadioButtonModule,\n    TabViewModule,\n    MultiSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CheckboxModule\n  ],\n  exports: [\n    StartTestComponent\n  ]\n})\nexport class StartTestModule { }\n","/*\n * Public API Surface of start-test\n */\n\nexport * from './lib/start-test.service';\nexport * from './lib/start-test.component';\nexport * from './lib/start-test.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}